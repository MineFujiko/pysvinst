name: Manylinux

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8]
        rust-version: [stable]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Rust ${{ matrix.rust-version }}
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Build source distribution
      run: |
        python setup.py sdist
    - name: Build Python 3.7 distribution
      if: matrix.python-version == '3.7'
      run: |
        docker pull quay.io/pypa/manylinux1_x86_64
        docker run --rm -e PLAT=manylinux1_x86_64 -e PYVER=cp37-cp37m -v `pwd`:/io quay.io/pypa/manylinux1_x86_64 /io/build-manylinux-wheels.sh
    - name: Build Python 3.8 distribution
      if: matrix.python-version == '3.8'
      run: |
        docker pull quay.io/pypa/manylinux1_x86_64
        docker run --rm -e PLAT=manylinux1_x86_64 -e PYVER=cp38-cp38 -v `pwd`:/io quay.io/pypa/manylinux1_x86_64 /io/build-manylinux-wheels.sh
    - name: Publish source to PyPI
      if: matrix.python-version == '3.7'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - name: Publish binaries to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/svinst*-manylinux*.whl
